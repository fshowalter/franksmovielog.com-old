{"version":3,"sources":["webpack:///./src/pages/viewings.tsx"],"names":["FilterControl","Label","Container","Heading","Content","TextInput","TextInputWrap","SelectInput","SelectFilter","label","filterAttribute","children","options","key","map","optionName","optionValue","value","htmlFor","data-filter-type","data-filter-attribute","TextFilter","placeholder","name","Sorter","target","data-sorter","data-target","FilterPanel","heading","data-filter-controls","RangeFilterWrap","rangeInputMixin","RangeInputMin","RangeInputMax","RangeFilter","attribute","min","max","data-filter-min-value","data-filter-max-value","className","style","left","type","defaultValue","step","PanelHeaderHeader","PanelHeaderHeading","PanelHeaderSlug","PanelHeader","title","slug","List","ListItem","React","memo","Title","Slug","ColumnWrap","Column1","Column2","TwoColumns","slugForVenue","venue","toLowerCase","replace","Viewings","data","releaseYears","allViewing","nodes","node","movie","year","sort","minYear","maxYear","length","venueOptions","Set","yearOptions","date","substring","id","viewing","sequence","imdbId","data-title","data-sort-title","sortTitle","data-viewing-date","data-release-date","data-via","data-viewing-year","moment","format","query"],"mappings":"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","file":"component---src-pages-viewings-tsx-1d7faa59673ab27f043b.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport moment from \"moment\";\nimport React, { ReactNode } from \"react\";\n\nimport { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\n\nimport Layout from \"../components/Layout\";\n\nfunction buildSlug(node: Props[\"data\"][\"allViewing\"][\"nodes\"][0]): string {\n  return `${moment(node.date).format(\"dddd, MMMM Do YYYY\")} via ${node.venue}.`;\n}\n\nconst FilterControl = styled.div`\n  margin-bottom: 35px;\n`;\n\nconst Label = styled.label`\n  color: #222;\n  display: block;\n  font-size: 15px;\n  font-weight: normal;\n  letter-spacing: 0.5px;\n  line-height: 2.2;\n`;\n\nconst Container = styled.div`\n  border: 1px solid #eee;\n  border-left: none;\n  border-right: none;\n  transition: opacity 0.3s ease;\n\n  @media only screen and (min-width: 48em) {\n    border: none;\n    border-right: solid 1px #eee;\n  }\n`;\n\nconst Heading = styled.h2`\n  border-bottom: 1px solid var(--color-primary);\n  display: block;\n  font-size: 19px;\n  font-weight: normal;\n  margin: 0 0 20px;\n  padding: 20px;\n  position: relative;\n  text-decoration: none;\n\n  @media only screen and (min-width: 48em) {\n    padding: 20px 0;\n  }\n`;\n\nconst Content = styled.div`\n  padding: 0 20px;\n\n  @media only screen and (min-width: 48em) {\n    padding: 0 50px 20px 0;\n  }\n`;\n\nconst TextInput = styled.input`\n  backface-visibility: hidden;\n  background-color: #fff;\n  border: 0;\n  border-radius: 0;\n  box-sizing: border-box;\n  color: var(--color-text-secondary);\n  display: block;\n  font-family: var(--font-family-system);\n  font-size: 16px;\n  padding: 0;\n  width: 100%;\n  ::placeholder {\n    color: rgba(0, 0, 0, 0.54);\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n      Roboto, \"Helvetica Neue\", Arial, sans-serif;\n    font-size: 14px;\n    font-weight: normal;\n  }\n`;\n\nconst TextInputWrap = styled.div`\n  border-bottom: solid 1px #eee;\n  margin-bottom: 8px;\n  padding-bottom: 7px;\n`;\n\nconst SelectInput = styled.select`\n  appearance: none;\n  backface-visibility: hidden;\n  background-color: #fff;\n  border: 0;\n  border-radius: 0;\n  box-sizing: border-box;\n  color: rgba(0, 0, 0, 0.54);\n  display: block;\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    \"Helvetica Neue\", Arial, sans-serif;\n  font-size: 15px;\n  padding: 0;\n  text-indent: 0.01px;\n  text-overflow: \"\";\n  width: 100%;\n`;\n\ninterface SelectFilterProps {\n  label: string;\n  filterAttribute: string;\n  children: Array<[string, string]>;\n}\n\nfunction SelectFilter({\n  label,\n  filterAttribute,\n  children,\n}: SelectFilterProps): JSX.Element {\n  const options = [\n    <option key=\"all\">All</option>,\n    ...children.map(([optionName, optionValue]) => {\n      return (\n        <option key={optionValue} value={optionValue}>\n          {optionName}\n        </option>\n      );\n    }),\n  ];\n\n  return (\n    <FilterControl>\n      <Label htmlFor={label}>{label}</Label>\n      <SelectInput\n        data-filter-type=\"select\"\n        data-filter-attribute={filterAttribute}\n      >\n        {options}\n      </SelectInput>\n    </FilterControl>\n  );\n}\n\ninterface TextFilterProps {\n  label: string;\n  placeholder: string;\n  filterAttribute: string;\n}\n\nfunction TextFilter({\n  label,\n  placeholder,\n  filterAttribute,\n}: TextFilterProps): JSX.Element {\n  return (\n    <FilterControl>\n      <Label htmlFor={label}>{label}</Label>\n      <TextInputWrap>\n        <TextInput\n          name={label}\n          placeholder={placeholder}\n          data-filter-type=\"text\"\n          data-filter-attribute={filterAttribute}\n        />\n      </TextInputWrap>\n    </FilterControl>\n  );\n}\n\ninterface SorterProps {\n  name: string;\n  children: Array<[string, string]>;\n  target: string;\n}\n\nfunction Sorter({ name, children, target }: SorterProps): JSX.Element {\n  return (\n    <FilterControl>\n      <Label htmlFor={name}>{name}</Label>\n      <SelectInput\n        name={name}\n        data-sorter={children[0][1]}\n        data-target={target}\n      >\n        {children.map(([optionName, optionValue]) => {\n          return (\n            <option key={optionName} value={optionValue}>\n              {optionName}\n            </option>\n          );\n        })}\n      </SelectInput>\n    </FilterControl>\n  );\n}\n\ninterface FilterPanelProps {\n  heading: string;\n  children: ReactNode;\n}\n\nfunction FilterPanel({ heading, children }: FilterPanelProps): JSX.Element {\n  return (\n    <Container data-filter-controls data-target=\"#viewings\">\n      <Heading>{heading}</Heading>\n      <Content>{children}</Content>\n    </Container>\n  );\n}\n\nconst RangeFilterWrap = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-around;\n\n  .noUi-target * {\n    background-color: rgba(0, 0, 0, 0.02);\n    box-sizing: border-box;\n    cursor: default;\n    touch-action: none;\n    -webkit-touch-callout: none;\n    transition: transform 0.3s ease-in-out;\n    user-select: none;\n  }\n\n  .noUi-active {\n    background-color: #eaeaea;\n    box-shadow: inset 0 0 5px #222;\n  }\n\n  .noUi-state-drag .noUi-active {\n    transform: scale(1.25);\n  }\n\n  .noUi-base {\n    background: rgba(0, 0, 0, 0.02);\n    border-bottom: solid 0.5rem #fff;\n    border-top: solid 0.5rem #fff;\n    height: 2rem;\n    margin: auto 0.8rem;\n    position: relative;\n\n    @media only screen and (min-width: 35em) {\n      border-color: #fff;\n    }\n  }\n\n  .noUi-handle {\n    background-color: #fff;\n    border: 1px solid rgba(0, 0, 0, 0.54);\n    border-radius: 50%;\n    height: 2rem;\n    left: -1rem;\n    position: relative;\n    top: -0.5rem;\n    width: 2rem;\n    z-index: 1;\n  }\n\n  .noUiSlider {\n    flex: 1 100%;\n  }\n\n  .noUi-origin {\n    border-radius: inherit;\n    bottom: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n  }\n\n  .noUi-stacking .noUi-handle {\n    z-index: 10;\n  }\n`;\n\nconst rangeInputMixin = css`\n  appearance: textfield;\n  background-color: #fff;\n  border: 0;\n  box-sizing: content-box;\n  color: rgba(0, 0, 0, 0.54);\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    \"Helvetica Neue\", Arial, sans-serif;\n  font-size: 14px;\n  line-height: 1.2rem;\n  padding: 0;\n  width: 25%;\n\n  &::-webkit-inner-spin-button {\n    appearance: none;\n    margin: 0;\n  }\n\n  width: 3rem;\n\n  @media (min-width: 50em) {\n    height: 1.4rem;\n    line-height: 1.4rem;\n  }\n`;\n\nconst RangeInputMin = styled.input`\n  ${rangeInputMixin}\n  margin-right: auto;\n`;\n\nconst RangeInputMax = styled.input`\n  ${rangeInputMixin}\n  align-self: flex-start;\n  text-align: right;\n`;\n\ninterface RangeFilterProps {\n  name: string;\n  attribute: string;\n  min: string;\n  max: string;\n}\n\nfunction RangeFilter({\n  name,\n  attribute,\n  min,\n  max,\n}: RangeFilterProps): JSX.Element {\n  return (\n    <FilterControl>\n      <Label htmlFor={name}>{name}</Label>\n      <RangeFilterWrap\n        data-filter-attribute={attribute}\n        data-filter-type=\"range\"\n        data-filter-min-value={min}\n        data-filter-max-value={max}\n      >\n        <div className=\"noUiSlider noUi-target\">\n          <div className=\"noUi-base noUi-background noUi-horizontal\">\n            <div\n              className=\"noUi-origin noUi-origin-lower\"\n              style={{ left: \"0%\" }}\n            >\n              <div className=\"noUi-handle noUi-handle-lower\" />\n            </div>\n            <div\n              className=\"noUi-origin noUi-origin-upper\"\n              style={{ left: \"100%\" }}\n            >\n              <div className=\"noUi-handle noUi-handle-upper\" />\n            </div>\n          </div>\n        </div>\n        <RangeInputMin\n          type=\"number\"\n          defaultValue={min}\n          min={min}\n          max={max}\n          step=\"1\"\n          className=\"filter-numeric min\"\n        />\n        <RangeInputMax\n          type=\"number\"\n          defaultValue={max}\n          min={min}\n          max={max}\n          step=\"1\"\n          className=\"filter-numeric max\"\n        />\n      </RangeFilterWrap>\n    </FilterControl>\n  );\n}\n\nconst PanelHeaderHeader = styled.header`\n  padding: 20px;\n\n  @media only screen and (min-width: 48em) {\n    padding: 10px 0 20px;\n    text-align: left;\n  }\n\n  @media only screen and (min-width: 71.24em) {\n    padding-top: 0;\n  }\n`;\n\nconst PanelHeaderHeading = styled.h1`\n  line-height: 60px;\n  margin-bottom: 0;\n`;\n\nconst PanelHeaderSlug = styled.div`\n  color: rgba(0, 0, 0, 0.54);\n  font-size: 15px;\n  line-height: 20px;\n  margin-bottom: 0;\n`;\n\ninterface PanelHeaderProps {\n  title: string;\n  slug: string;\n}\n\nfunction PanelHeader({ title, slug }: PanelHeaderProps): JSX.Element {\n  return (\n    <PanelHeaderHeader>\n      <PanelHeaderHeading>{title}</PanelHeaderHeading>\n      <PanelHeaderSlug>{slug}</PanelHeaderSlug>\n    </PanelHeaderHeader>\n  );\n}\n\nconst List = styled.ol`\n  margin: 0 0 35px;\n  padding: 0;\n`;\n\nconst ListItem = React.memo(styled.li`\n  font-weight: normal;\n  list-style-type: none;\n  padding: 0;\n  position: relative;\n\n  &:after {\n    background-color: #eee;\n    bottom: 0;\n    content: \"\";\n    display: block;\n    height: 1px;\n    left: 20px;\n    margin: 0;\n    position: absolute;\n    right: 0;\n  }\n`);\n\nconst Title = styled.div`\n  display: block;\n  font-size: 18px;\n  line-height: 40px;\n  overflow: hidden;\n  padding: 20px 20px 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst Slug = styled.div`\n  color: rgba(0, 0, 0, 0.38);\n  font-size: 15px;\n  line-height: 20px;\n  padding: 0 20px 20px;\n  text-rendering: optimizeLegibility;\n`;\n\nconst ColumnWrap = styled.div`\n  @media only screen and (min-width: 48em) {\n    border-top: solid 1px #eee;\n    display: flex;\n    margin: 0 auto;\n    width: 700px;\n  }\n  @media only screen and (min-width: 71.24em) {\n    width: 900px;\n  }\n`;\n\nconst Column1 = styled.div`\n  @media only screen and (min-width: 48em) {\n    width: 250px;\n  }\n\n  @media only screen and (min-width: 71.24em) {\n    width: 340px;\n  }\n`;\n\nconst Column2 = styled.div`\n  @media only screen and (min-width: 48em) {\n    padding-left: 30px;\n    width: 420px;\n  }\n\n  @media only screen and (min-width: 71.24em) {\n    width: 540px;\n  }\n`;\n\ninterface TwoColumnsProps {\n  children: React.ReactNode;\n}\n\nfunction TwoColumns({ children }: TwoColumnsProps): JSX.Element {\n  return <ColumnWrap>{children}</ColumnWrap>;\n}\n\ninterface Props {\n  data: {\n    allViewing: {\n      nodes: {\n        sequence: number;\n        date: string;\n        imdbId: string;\n        venue: string;\n        movie: {\n          sortTitle: string;\n          title: string;\n          year: string;\n        };\n      }[];\n    };\n  };\n}\n\nfunction slugForVenue(venue: string): string {\n  return venue\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(/&/g, \"-and-\") // Replace & with 'and'\n    .replace(/[^\\w-]+/g, \"\");\n}\n\nexport default function Viewings({ data }: Props): JSX.Element {\n  const releaseYears = data.allViewing.nodes\n    .map((node) => {\n      return node.movie.year;\n    })\n    .sort();\n\n  const minYear = releaseYears[0];\n  const maxYear = releaseYears[releaseYears.length - 1];\n\n  const venues = [\n    ...new Set(\n      data.allViewing.nodes.map((node) => {\n        return node.venue;\n      })\n    ),\n  ].sort();\n\n  const venueOptions = venues.map((venue): [string, string] => {\n    return [venue, slugForVenue(venue)];\n  });\n\n  const yearOptions = [\n    ...new Set(\n      data.allViewing.nodes.map((node) => {\n        return node.date.substring(0, 4);\n      })\n    ),\n  ]\n    .sort()\n    .map((year): [string, string] => {\n      return [year, year];\n    });\n\n  return (\n    <Layout>\n      <PanelHeader\n        title=\"Viewing Log\"\n        slug={`I've watched ${data.allViewing.nodes.length} movies since 2012`}\n      />\n      <TwoColumns>\n        <Column1>\n          <FilterPanel heading=\"Filter and Sort\">\n            <TextFilter\n              label=\"Title\"\n              placeholder=\"Enter all or part of a title.\"\n              filterAttribute=\"data-title\"\n            />\n            <RangeFilter\n              name=\"Release Year\"\n              attribute=\"data-release-date\"\n              min={minYear}\n              max={maxYear}\n            />\n            <SelectFilter\n              label=\"Viewing Year\"\n              filterAttribute=\"data-viewing-year\"\n            >\n              {yearOptions}\n            </SelectFilter>\n            <SelectFilter label=\"Via\" filterAttribute=\"data-via\">\n              {venueOptions}\n            </SelectFilter>\n\n            <Sorter name=\"Order By\" target=\"#viewings\">\n              {[\n                [\"Viewing Date (Newest First)\", \"viewing-date-desc\"],\n                [\"Viewing Date (Oldest First)\", \"viewing-date-asc\"],\n                [\"Release Date (Newest First)\", \"release-date-desc\"],\n                [\"Release Date (Oldest First)\", \"release-date-asc\"],\n                [\"Title\", \"sort-title-asc\"],\n              ]}\n            </Sorter>\n          </FilterPanel>\n        </Column1>\n        <Column2>\n          <List id=\"viewings\">\n            {data.allViewing.nodes.map((viewing) => (\n              <ListItem\n                key={`${viewing.sequence}-${viewing.imdbId}`}\n                data-title={viewing.movie.title}\n                data-sort-title={viewing.movie.sortTitle}\n                data-viewing-date={viewing.date}\n                data-release-date={viewing.movie.year}\n                data-via={slugForVenue(viewing.venue)}\n                data-viewing-year={viewing.date.substring(0, 4)}\n              >\n                <Title>\n                  {viewing.movie.title} ({viewing.movie.year})\n                </Title>\n                <Slug>{buildSlug(viewing)}</Slug>\n              </ListItem>\n            ))}\n          </List>\n        </Column2>\n      </TwoColumns>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allViewing(sort: { fields: [sequence], order: DESC }) {\n      nodes {\n        sequence\n        date(formatString: \"YYYY-MM-DD\")\n        imdbId\n        venue\n        movie {\n          sortTitle\n          title\n          year\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}