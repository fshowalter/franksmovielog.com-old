{"version":3,"sources":["webpack:///./src/templates/Review.tsx","webpack:///./src/components/GlobalStyles/index.tsx"],"names":["Title","Wrap","DateAndVia","Main","YearAndRuntimeWrap","AkaWrap","AkaTitle","YearAndRuntimeDivider","InlineGrade","Grade","AkaTitles","review","movie","originalTitle","title","ReviewImage","Img","DirectorsWrap","Directors","directors","map","director","fullName","join","YearAndRuntime","year","runtimeMinutes","Review","Via","ReviewTemplate","data","Layout","markdown","backdrop","fluid","childImageSharp","alt","content","renderToString","grade","width","height","rawMarkdownBody","trim","parse","marked","pedantic","toString","reviewContent","moment","utc","date","format","pageQuery"],"mappings":"6WAcMA,EAAQ,kBAAH,oBAAG,CAAH,oJAWLC,EAAO,mBAAH,oBAAG,CAAH,yCCjBmB,CAAH,wODiBhB,MASJC,EAAa,qBAAH,oBAAG,CAAH,mjBAmCVC,EAAO,oBAAH,oBAAG,CAAH,sQAqDJC,EAAqB,oBAAH,oBAAG,CAAH,gEAKlBC,EAAU,mBAAH,oBAAG,CAAH,wFAMPC,EAAW,mBAAH,oBAAG,CAAH,4HAQRC,EAAwB,oBAAH,oBAAG,CAAH,uCAIrBC,EAAc,YAAOC,IAAP,sBAAH,kHASjB,SAASC,EAAT,GAAkE,IAA7CC,EAA6C,EAA7CA,OACnB,OAAIA,EAAOC,MAAMC,gBAAkBF,EAAOC,MAAME,MACvC,KAIP,YAACT,EAAD,aACO,YAACC,EAAD,KAAWK,EAAOC,MAAMC,gBAKnC,IAUME,EAAc,YAAOC,IAAP,sBAAH,2CAmBXC,EAAgB,oBAAH,qBAAG,CAAH,+EAMnB,SAASC,EAAT,GAA2D,IAAtCP,EAAsC,EAAtCA,OACnB,OACE,YAACM,EAAD,UACK,IACFN,EAAOC,MAAMO,UAAUC,KAAI,SAACC,GAAD,OAAcA,EAASC,YAAUC,KAAK,QAKxE,SAASC,EAAT,GAAgE,IAAtCb,EAAsC,EAAtCA,OACxB,OACE,YAACP,EAAD,KACGO,EAAOC,MAAMa,KADhB,IACsB,YAAClB,EAAD,UAAiD,IACpEI,EAAOC,MAAMc,eAFhB,UAQJ,IAAMC,EAAS,uBAAH,qBAAG,CAAH,+HAQNC,EAAM,oBAAH,qBAAG,GAEG,SAASC,EAAT,GAAsD,IAjDnElB,EACG,EAgDoCmB,EAA4B,EAA5BA,KACvC,OACE,YAACC,EAAA,EAAD,KACE,YAAC9B,EAAD,MApDJU,EAqDmBmB,EAAKnB,QAnDZqB,SAASC,SAKnB,YAAClB,EAAD,CACEmB,MAAK,UAAEvB,EAAOqB,SAASC,gBAAlB,aAAE,EAA0BE,gBAAgBD,MACjDE,IAAG,gBAAkBzB,EAAOC,MAAME,QAN7B,KAmDH,YAACd,EAAD,KAAQ8B,EAAKnB,OAAOC,MAAME,OAC1B,YAACJ,EAAD,CAAWC,OAAQmB,EAAKnB,SACxB,YAACO,EAAD,CAAWP,OAAQmB,EAAKnB,SACxB,YAACa,EAAD,CAAgBb,OAAQmB,EAAKnB,SAC7B,YAACgB,EAAD,KACE,YAACxB,EAAD,KA1EY,SACpBQ,GAEA,IAAM0B,EAAaC,yBACjB,YAAC9B,EAAD,CAAa+B,MAAO5B,EAAO4B,MAAOC,MAAO,GAAIC,OAAQ,MAD1C,UAEF9B,EAAOqB,SAASU,gBAAgBC,OAE3C,OAAOC,IAAMC,IAAOR,EAAS,CAAES,UAAU,IAAQC,YAmElCC,CAAclB,EAAKnB,SAC1B,YAACT,EAAD,KACG+C,IAAOC,IAAIpB,EAAKnB,OAAOwC,MAAMC,OAAO,mBAAoB,IACzD,YAACxB,EAAD,wBAQL,IAAMyB,EAAY","file":"component---src-templates-review-tsx-ca92f97bb6f5f8b501cf.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport Img, { FluidObject } from \"gatsby-image\";\nimport parse from \"html-react-parser\";\nimport marked from \"marked\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport styled from \"@emotion/styled\";\n\nimport { bodyTextMixin } from \"../components/GlobalStyles\";\nimport Grade from \"../components/Grade\";\nimport Layout from \"../components/Layout\";\n\nconst Title = styled.h1`\n  font-size: 32px;\n  line-height: 1.1;\n  margin-bottom: 0;\n  padding: 30px 0 0;\n\n  @media only screen and (min-width: 35em) {\n    font-size: 42px;\n  }\n`;\n\nconst Wrap = styled.div`\n  max-width: 900px;\n  padding: 0 20px 30px;\n\n  p {\n    ${bodyTextMixin};\n  }\n`;\n\nconst DateAndVia = styled.aside`\n  border-right: solid 1px #eee;\n  color: rgba(0, 0, 0, 0.54);\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    \"Helvetica Neue\", Arial, sans-serif;\n  font-size: 12px;\n  line-height: 1.4;\n  margin-right: 30px;\n  min-width: 170px;\n  order: 2;\n  padding-right: 30px;\n\n  @media only screen and (min-width: 71.25em) {\n    order: 1;\n    padding-right: 20px;\n    padding-top: 26px;\n    position: relative;\n    width: 220px;\n\n    &:after {\n      background: #fdfdfd;\n      border: #e9e7e0 1px solid;\n      border-radius: 100%;\n      content: \"\";\n      display: block;\n      height: 7px;\n      position: absolute;\n      right: -5px;\n      top: 30px;\n      width: 7px;\n      z-index: 500;\n    }\n  }\n`;\n\nconst Main = styled.main`\n  border-top: 1px solid #eee;\n  color: rgba(0, 0, 0, 0.87);\n  font-size: 18px;\n  line-height: 1.5;\n  margin-top: 30px;\n  max-width: 66ch;\n  order: 3;\n  padding-top: 30px;\n\n  @media only screen and (min-width: 71.25em) {\n    border-top: none;\n    margin-top: 0;\n    order: 2;\n    padding-top: 20px;\n  }\n`;\n\ninterface Props {\n  location: {\n    pathname: string;\n  };\n  data: {\n    review: {\n      title: string;\n      date: string;\n      grade: string;\n      prettyDate: string;\n      markdown: {\n        backdrop?: {\n          childImageSharp: {\n            fluid: FluidObject;\n          };\n        };\n        rawMarkdownBody: string;\n      };\n      movie: {\n        imdbId: string;\n        title: string;\n        year: string;\n        runtimeMinutes: number;\n        originalTitle: string;\n        directors: {\n          fullName: string;\n        }[];\n        viewings: {\n          id: string;\n        }[];\n      };\n    };\n  };\n}\n\nconst YearAndRuntimeWrap = styled.span`\n  color: rgba(0, 0, 0, 0.54);\n  display: block;\n`;\n\nconst AkaWrap = styled.div`\n  color: rgba(0, 0, 0, 0.54);\n  padding-bottom: 1em;\n  padding-top: 0.25em;\n`;\n\nconst AkaTitle = styled.div`\n  color: rgba(0, 0, 0, 0.87);\n  display: inline-block;\n  font-size: 18px;\n  font-style: italic;\n  white-space: nowrap;\n`;\n\nconst YearAndRuntimeDivider = styled.span`\n  color: #eee;\n`;\n\nconst InlineGrade = styled(Grade)`\n  display: inline-block;\n  height: auto;\n  margin-right: 2px;\n  position: relative;\n  top: 3px;\n  width: 95px;\n`;\n\nfunction AkaTitles({ review }: Props[\"data\"]): JSX.Element | null {\n  if (review.movie.originalTitle === review.movie.title) {\n    return null;\n  }\n\n  return (\n    <AkaWrap>\n      aka: <AkaTitle>{review.movie.originalTitle}</AkaTitle>\n    </AkaWrap>\n  );\n}\n\nconst reviewContent = (\n  review: Props[\"data\"][\"review\"]\n): JSX.Element | JSX.Element[] => {\n  const content = `${renderToString(\n    <InlineGrade grade={review.grade} width={95} height={95} />\n  )}&#8212;${review.markdown.rawMarkdownBody.trim()}`;\n\n  return parse(marked(content, { pedantic: true }).toString());\n};\n\nconst ReviewImage = styled(Img)`\n  margin: 0 -20px;\n`;\n\nconst reviewImage: React.FC<Props[\"data\"][\"review\"]> = (\n  review: Props[\"data\"][\"review\"]\n) => {\n  if (!review.markdown.backdrop) {\n    return null;\n  }\n\n  return (\n    <ReviewImage\n      fluid={review.markdown.backdrop?.childImageSharp.fluid}\n      alt={`A still from ${review.movie.title}`}\n    />\n  );\n};\n\nconst DirectorsWrap = styled.span`\n  color: rgba(0, 0, 0, 0.54);\n  display: block;\n  margin-top: 1em;\n`;\n\nfunction Directors({ review }: Props[\"data\"]): JSX.Element {\n  return (\n    <DirectorsWrap>\n      D:{\" \"}\n      {review.movie.directors.map((director) => director.fullName).join(\" & \")}\n    </DirectorsWrap>\n  );\n}\n\nfunction YearAndRuntime({ review }: Props[\"data\"]): JSX.Element {\n  return (\n    <YearAndRuntimeWrap>\n      {review.movie.year} <YearAndRuntimeDivider>|</YearAndRuntimeDivider>{\" \"}\n      {review.movie.runtimeMinutes}\n      &thinsp;mins.\n    </YearAndRuntimeWrap>\n  );\n}\n\nconst Review = styled.article`\n  @media only screen and (min-width: 71.25em) {\n    border-top: solid 1px #eee;\n    display: flex;\n    margin-top: 16px;\n  }\n`;\n\nconst Via = styled.span``;\n\nexport default function ReviewTemplate({ data }: Props): JSX.Element {\n  return (\n    <Layout>\n      <Wrap>\n        {reviewImage(data.review)}\n        <Title>{data.review.movie.title}</Title>\n        <AkaTitles review={data.review} />\n        <Directors review={data.review} />\n        <YearAndRuntime review={data.review} />\n        <Review>\n          <Main>{reviewContent(data.review)}</Main>\n          <DateAndVia>\n            {moment.utc(data.review.date).format(\"ddd MMM Do YYYY\")}{\" \"}\n            <Via>via Shudder</Via>\n          </DateAndVia>\n        </Review>\n      </Wrap>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ReviewForSlug($slug: String!) {\n    review(slug: { eq: $slug }) {\n      slug\n      date\n      prettyDate: date(formatString: \"MMM D, YYYY\")\n      grade\n      movie {\n        title\n        year\n        runtimeMinutes\n        originalTitle\n        directors {\n          fullName\n        }\n        viewings {\n          id\n        }\n      }\n      markdown {\n        rawMarkdownBody\n        backdrop {\n          childImageSharp {\n            fluid(toFormat: JPG, jpegQuality: 75) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { css } from \"@emotion/core\";\n\nimport Reset from \"./Reset\";\nimport Typography from \"./Typography\";\nimport Vars from \"./Vars\";\n\nexport const bodyTextMixin = css`\n  font-feature-settings: \"ordn\", \"lnum\";\n  font-size: 18px;\n  letter-spacing: -0.05px;\n  line-height: 27px;\n  margin: 0 auto 30px;\n  max-width: 66ch;\n\n  /* @media (min-width: 48em) {\n    font-size: 21px;\n    line-height: 1.58;\n    margin-bottom: 21px;\n  } */\n`;\n\nexport default function GlobalStyles(): JSX.Element {\n  return (\n    <>\n      <Vars />\n      <Reset />\n      <Typography />\n    </>\n  );\n}\n"],"sourceRoot":""}