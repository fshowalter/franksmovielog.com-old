{"version":3,"sources":["webpack:///./src/components/MoreList.tsx","webpack:///./src/templates/Home.tsx"],"names":["List","Title","ImageWrap","Link","ListItemWrap","ListItem","StyledGrade","Grade","MoreList","nodes","map","node","key","sequence","to","slug","markdown","backdrop","childImageSharp","fluid","alt","movie","title","loading","imageForNode","grade","width","height","HomeWrap","Review","ReviewHeader","ReviewHeading","ReviewHeaderLink","ReviewImageWrap","CWrap","Aside","PaginationHeading","PaginationItemsWrap","PaginationLinkWrap","PaginationNextPageLink","PaginationWrap","MoreReviewsList","MoreReviews","moreNodes","pageContext","currentPage","isLast","numPages","nextPage","toString","rel","Main","InlineGrade","HomeTemplate","data","Layout","page","review","content","renderToString","marked","firstParagraph","trim","parse","moment","utc","date","format","more","pageQuery"],"mappings":"qXAQMA,EAAO,kBAAH,mBAAG,CAAH,iOAmBJC,EAAQ,mBAAH,mBAAG,CAAH,oPAYLC,EAAY,YAAOC,IAAP,qBAAH,6CAITC,EAAe,mBAAH,mBAAG,CAAH,uHASZC,EAAW,kBAAH,mBAAG,CAAH,2CAKRD,EALQ,oCAWRA,EAXQ,iFAkBNA,EAlBM,yCAwBNA,EAxBM,+DA+BRA,EA/BQ,8HA6Dd,IAAME,EAAc,YAAOC,IAAP,qBAAH,8IA6BF,SAASC,EAAT,GAAiD,IAA7BC,EAA6B,EAA7BA,MACjC,OACE,YAACT,EAAD,KACGS,EAAMC,KAAI,SAACC,GAAD,OACT,YAACN,EAAD,CAAUO,IAAKD,EAAKE,UAClB,YAACT,EAAD,KACE,YAACF,EAAD,CAAWY,GAAE,YAAcH,EAAKI,KAAnB,KAjDzB,SAAsBJ,GAAsC,QAC1D,OAAKA,EAAKK,SAASC,UAAaN,EAAKK,SAASC,SAASC,gBAKrD,YAAC,IAAD,CACEC,MAAK,UAAER,EAAKK,SAASC,gBAAhB,iBAAE,EAAwBC,uBAA1B,aAAE,EAAyCC,MAChDC,IAAG,gBAAkBT,EAAKU,MAAMC,MAChCC,QAAQ,UAPH,KAgDIC,CAAab,IAEhB,YAACV,EAAD,KAAQU,EAAKU,MAAMC,OACnB,YAAChB,EAAD,CAAamB,MAAOd,EAAKc,MAAOC,MAAO,GAAIC,OAAQ,WCzI/D,IAAMC,EAAW,mBAAH,oBAAG,CAAH,mQAcR5B,EAAO,kBAAH,oBAAG,CAAH,+EAQJ6B,EAAS,uBAAH,oBAAG,CAAH,8DAKNC,EAAe,sBAAH,oBAAG,CAAH,2CAIZC,EAAgB,kBAAH,oBAAG,CAAH,gLAcbC,EAAmB,YAAO7B,IAAP,sBAAH,+DAKhB8B,EAAkB,YAAO9B,IAAP,sBAAH,4KAYf+B,EAAQ,mBAAH,oBAAG,CAAH,qCAQLC,EAAQ,qBAAH,oBAAG,CAAH,0OAWL9B,EAAW,kBAAH,oBAAG,CAAH,yTA0BNwB,EA1BM,sDA+BNI,EA/BM,gCAoCNC,EApCM,mCA8GRE,EAAoB,mBAAH,qBAAG,CAAH,2LAUjBC,EAAsB,mBAAH,qBAAG,CAAH,+CAInBC,EAAqB,mBAAH,qBAAG,CAAH,2HAMlBC,EAAyB,YAAOpC,IAAP,uBAAH,qtBA+BtBqC,EAAiB,mBAAH,qBAAG,CAAH,4GASdC,EAAkB,YAAOjC,EAAP,uBAAH,yFAIfkC,EAAyC,SAAC,GAGzB,IAFrBC,EAEqB,EAFrBA,UACAC,EACqB,EADrBA,YAEQC,EAA0BD,EAA1BC,YACFC,EAASD,IADmBD,EAAbG,SAEfC,GAAYH,EAAc,GAAGI,WAEnC,OAAIH,EACK,KAIP,YAACN,EAAD,KACE,YAACJ,EAAD,mBACA,YAACK,EAAD,CAAiBhC,MAAOkC,IACxB,YAACN,EAAD,KACE,YAACC,EAAD,KACE,YAACC,EAAD,CAAwBzB,GAAE,SAAWkC,EAAX,IAAwBE,IAAI,QAAtD,oBASJC,EAAO,oBAAH,qBAAG,CAAH,sIAaJC,EAAc,YAAO7C,IAAP,uBAAH,kHAmBF,SAAS8C,EAAT,GAGQ,IAFrBT,EAEqB,EAFrBA,YACAU,EACqB,EADrBA,KAEA,OACE,YAACC,EAAA,EAAD,KACE,YAAC3B,EAAD,KACE,YAAC,EAAD,KACG0B,EAAKE,KAAK/C,MAAMC,KAAI,SAACC,GAAD,OACnB,YAAC,EAAD,CAAUC,IAAKD,EAAKE,UAClB,YAACgB,EAAD,KArJO,SAAClB,GAAgD,QACpE,OAAKA,EAAKK,SAASC,UAAaN,EAAKK,SAASC,SAASC,gBAKrD,YAACe,EAAD,CAAiBnB,GAAE,YAAcH,EAAKI,KAAnB,KACjB,YAAC,IAAD,CACEI,MAAK,UAAER,EAAKK,SAASC,gBAAhB,iBAAE,EAAwBC,uBAA1B,aAAE,EAAyCC,MAChDC,IAAG,gBAAkBT,EAAKU,MAAMC,MAChCC,QAAQ,WARL,KAoJMC,CAAab,GACd,YAACuB,EAAD,KACE,YAACJ,EAAD,KACE,YAACC,EAAD,KACE,YAACC,EAAD,CAAkBlB,GAAE,YAAcH,EAAKI,KAAnB,KACjBJ,EAAKU,MAAMC,SAIlB,YAAC6B,EAAD,MA7BhBM,EA6BqC9C,EA3B/B+C,EAAaC,yBACjB,YAACP,EAAD,CAAa3B,MAAOgC,EAAOhC,MAAOC,MAAO,GAAIC,OAAQ,MAD1C,IAERiC,IAAOH,EAAOzC,SAAS6C,eAAeC,QAEpCC,IAAML,EAAQT,cAwBL,YAACd,EAAD,KACG6B,IAAOC,IAAItD,EAAKuD,KAAM,eAAeC,OAAO,mBAhC3C,IACpBV,EAEMC,MAoCA,YAAC,EAAD,CAAaf,UAAWW,EAAKc,KAAK3D,MAAOmC,YAAaA,MAMvD,IAAMyB,EAAY","file":"component---src-templates-home-tsx-e1c1e07d7e2e2a96ebf6.js","sourcesContent":["import { Link } from \"gatsby\";\nimport Img, { FluidObject } from \"gatsby-image\";\nimport React from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nimport Grade from \"./Grade\";\n\nconst List = styled.ol`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  &:after {\n    clear: both;\n    content: \"\";\n    display: table;\n\n    @media only screen and (min-width: 48em) {\n      display: none;\n    }\n  }\n`;\n\nconst Title = styled.div`\n  color: var(--color-text-primary);\n  display: block;\n  font-family: \"Charter\", \"Georgia\", \"Times New Roman\", Times, serif;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.3;\n  margin-bottom: 3px;\n  text-rendering: optimizeLegibility;\n  width: 95%;\n`;\n\nconst ImageWrap = styled(Link)`\n  position: relative;\n`;\n\nconst ListItemWrap = styled.div`\n  display: block;\n  padding: 0 10px 30px;\n\n  @media only screen and (min-width: 48em) {\n    padding-bottom: 0;\n  }\n`;\n\nconst ListItem = styled.li`\n  display: block;\n  width: 50%;\n\n  &:first-of-type {\n    ${ListItemWrap} {\n      padding-left: 0;\n    }\n  }\n\n  &:last-of-type {\n    ${ListItemWrap} {\n      padding-right: 0;\n    }\n  }\n\n  @media only screen and (min-width: 48em) {\n    &:nth-of-type(odd) {\n      ${ListItemWrap} {\n        padding-left: 0;\n      }\n    }\n\n    &:nth-of-type(even) {\n      ${ListItemWrap} {\n        padding-right: 0;\n      }\n    }\n  }\n\n  @media only screen and (min-width: 48em) {\n    ${ListItemWrap} {\n      padding: 0;\n    }\n  }\n\n  @media only screen and (min-width: 48em) {\n    width: 23.5%;\n  }\n\n  @media only screen and (min-width: 71.25em) {\n    width: 200px;\n  }\n`;\n\ntype ReviewNode = Props[\"nodes\"][0];\n\nfunction imageForNode(node: ReviewNode): JSX.Element | null {\n  if (!node.markdown.backdrop || !node.markdown.backdrop.childImageSharp) {\n    return null;\n  }\n\n  return (\n    <Img\n      fluid={node.markdown.backdrop?.childImageSharp?.fluid}\n      alt={`A still from ${node.movie.title}`}\n      loading=\"eager\"\n    />\n  );\n}\n\nconst StyledGrade = styled(Grade)`\n  display: block;\n  margin-left: -0.5px;\n  max-width: 90px;\n  width: 50%;\n\n  @media only screen and (min-width: 48em) {\n    max-width: 75px;\n  }\n`;\n\ninterface Props {\n  nodes: {\n    grade: string;\n    sequence: number;\n    slug: string;\n    movie: {\n      title: string;\n    };\n    markdown: {\n      backdrop?: {\n        childImageSharp?: {\n          fluid: FluidObject;\n        };\n      };\n    };\n  }[];\n}\n\nexport default function MoreList({ nodes }: Props): JSX.Element {\n  return (\n    <List>\n      {nodes.map((node) => (\n        <ListItem key={node.sequence}>\n          <ListItemWrap>\n            <ImageWrap to={`/reviews/${node.slug}/`}>\n              {imageForNode(node)}\n            </ImageWrap>\n            <Title>{node.movie.title}</Title>\n            <StyledGrade grade={node.grade} width={90} height={18} />\n          </ListItemWrap>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import { graphql, Link } from \"gatsby\";\nimport Img, { FluidObject } from \"gatsby-image\";\nimport parse from \"html-react-parser\";\nimport marked from \"marked\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport styled from \"@emotion/styled\";\nimport { WindowLocation } from \"@reach/router\";\n\nimport Grade from \"../components/Grade\";\nimport Layout from \"../components/Layout\";\nimport MoreList from \"../components/MoreList\";\n\nconst HomeWrap = styled.div`\n  background: #fff;\n  font-family: \"Charter\", \"Iowan Old Style\", Georgia, Cambria, \"Times New Roman\",\n    Times, serif;\n  letter-spacing: 0.16px;\n  margin: 0;\n  padding: 20px;\n  text-rendering: optimizelegibility;\n\n  @media only screen and (min-width: 48em) {\n    padding: 0;\n  }\n`;\n\nconst List = styled.ol`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  /* padding-right: 25px; */\n`;\n\nconst Review = styled.article`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ReviewHeader = styled.header`\n  margin-top: 30px;\n`;\n\nconst ReviewHeading = styled.h3`\n  font-size: 26px;\n  font-weight: 700;\n  line-height: 1.1;\n  margin-bottom: 8px;\n  margin-top: 0;\n  padding: 0 0 0;\n  /* text-align: center; */\n\n  @media only screen and (min-width: 35em) {\n    font-size: 24px;\n  }\n`;\n\nconst ReviewHeaderLink = styled(Link)`\n  color: inherit;\n  text-decoration: none;\n`;\n\nconst ReviewImageWrap = styled(Link)`\n  background-repeat: no-repeat;\n  background-size: cover;\n  display: block;\n  margin: 0;\n  min-width: 200px;\n\n  @media only screen and (min-width: 71.25em) {\n    border: none;\n  }\n`;\n\nconst CWrap = styled.div`\n  /* border-top: solid 1px #eee; */\n  /* padding-left: 30px; */\n  /* flex: 1; */\n  /* display: flex; */\n  padding: 0;\n`;\n\nconst Aside = styled.aside`\n  color: rgba(0, 0, 0, 0.54);\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    \"Helvetica Neue\", Arial, sans-serif;\n  font-size: 13px;\n  line-height: 2.5;\n  order: 3;\n  text-transform: uppercase;\n  width: 200px;\n`;\n\nconst ListItem = styled.li`\n  margin: 0;\n  padding: 0;\n  position: relative;\n\n  &:after {\n    background-color: #eee;\n    clear: both;\n    content: \"\";\n    display: block;\n    height: 1px;\n    margin: 40px 20px 0;\n\n    @media only screen and (min-width: 40.625em) {\n      margin: 40px 0 0;\n    }\n  }\n\n  &:last-of-type:after {\n    display: none;\n  }\n\n  &:not(:first-of-type) {\n    margin-left: 0;\n\n    @media only screen and (min-width: 40.625em) {\n      ${Review} {\n        flex-direction: row;\n        justify-content: space-between;\n      }\n\n      ${ReviewImageWrap} {\n        margin: 30px 0 16px;\n        order: 2;\n      }\n\n      ${CWrap} {\n        order: 1;\n        padding-right: 24px;\n      }\n    }\n  }\n`;\n\ninterface Props {\n  location: WindowLocation;\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    page: {\n      nodes: {\n        sequence: number;\n        date: string;\n        grade: string;\n        slug: string;\n        movie: {\n          title: string;\n          year: number;\n        };\n        markdown: {\n          rawMarkdownBody: string;\n          backdrop?: {\n            childImageSharp?: {\n              fluid: FluidObject;\n            };\n          };\n          firstParagraph: string;\n        };\n      }[];\n    };\n    more: {\n      nodes: {\n        grade: string;\n        sequence: number;\n        slug: string;\n        movie: {\n          title: string;\n        };\n        markdown: {\n          backdrop?: {\n            childImageSharp?: {\n              fluid: FluidObject;\n            };\n          };\n        };\n      }[];\n    };\n  };\n}\n\ntype ReviewNode = Props[\"data\"][\"page\"][\"nodes\"][0];\n\nconst imageForNode = (node: ReviewNode): React.ReactElement | null => {\n  if (!node.markdown.backdrop || !node.markdown.backdrop.childImageSharp) {\n    return null;\n  }\n\n  return (\n    <ReviewImageWrap to={`/reviews/${node.slug}/`}>\n      <Img\n        fluid={node.markdown.backdrop?.childImageSharp?.fluid}\n        alt={`A still from ${node.movie.title}`}\n        loading=\"eager\"\n      />\n    </ReviewImageWrap>\n  );\n};\n\nconst PaginationHeading = styled.div`\n  border-bottom: 1px solid #eee;\n  color: rgba(0, 0, 0, 0.54);\n  font-size: 16px;\n  margin: 60px 0 10px;\n  padding-bottom: 4px;\n  text-rendering: optimizeLegibility;\n  word-wrap: break-word;\n`;\n\nconst PaginationItemsWrap = styled.div`\n  margin-bottom: 40px;\n`;\n\nconst PaginationLinkWrap = styled.div`\n  font-family: \"Charter\", \"Georgia\", \"Times New Roman\", Times, serif;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nconst PaginationNextPageLink = styled(Link)`\n  border: 1px solid #eee;\n  border-radius: 5px;\n  color: inherit;\n  display: inline-block;\n  font-size: 15px;\n  line-height: 38px;\n  margin-top: 30px;\n  padding: 0 60px 0 20px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n\n  &:after {\n    background-image: url('data:Image/svg+xml;charset=utf8,<svg fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\"><path d=\"M6.165 3.874c-.217-.204-.22-.53-.008-.73.206-.192.56-.195.776.008l5.902 5.48c.11.102.165.236.165.37-.002.126-.055.262-.165.365l-5.902 5.478c-.217.204-.564.207-.776.007-.206-.193-.21-.525.008-.728L11.69 9 6.165 3.873z\"></path></svg>');\n    background-size: contain;\n    content: \"\";\n    height: 20px;\n    opacity: 0.3;\n    position: absolute;\n    right: 20px;\n    top: 9px;\n    width: 20px;\n  }\n`;\n\ninterface PaginationProps {\n  moreNodes: Props[\"data\"][\"more\"][\"nodes\"];\n  pageContext: Props[\"pageContext\"];\n}\n\nconst PaginationWrap = styled.div`\n  margin: 0 auto 40px;\n  padding: 0;\n\n  @media only screen and (min-width: 48em) {\n    padding: 0;\n  }\n`;\n\nconst MoreReviewsList = styled(MoreList)`\n  font-family: \"Charter\", \"Georgia\", \"Times New Roman\", Times, serif;\n`;\n\nconst MoreReviews: React.FC<PaginationProps> = ({\n  moreNodes,\n  pageContext,\n}: PaginationProps) => {\n  const { currentPage, numPages } = pageContext;\n  const isLast = currentPage === numPages;\n  const nextPage = (currentPage + 1).toString();\n\n  if (isLast) {\n    return null;\n  }\n\n  return (\n    <PaginationWrap>\n      <PaginationHeading>More Posts</PaginationHeading>\n      <MoreReviewsList nodes={moreNodes} />\n      <PaginationItemsWrap>\n        <PaginationLinkWrap>\n          <PaginationNextPageLink to={`/page-${nextPage}/`} rel=\"next\">\n            More reviews\n          </PaginationNextPageLink>\n        </PaginationLinkWrap>\n      </PaginationItemsWrap>\n    </PaginationWrap>\n  );\n};\n\nconst Main = styled.main`\n  color: rgba(0, 0, 0, 0.54);\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 28px;\n  max-width: 66ch;\n  order: 3;\n\n  p {\n    margin: 0;\n  }\n`;\n\nconst InlineGrade = styled(Grade)`\n  display: inline-block;\n  height: auto;\n  margin-right: 2px;\n  position: relative;\n  top: 0px;\n  width: 95px;\n`;\n\nconst reviewContent = (\n  review: Props[\"data\"][\"page\"][\"nodes\"][0]\n): JSX.Element | JSX.Element[] => {\n  const content = `${renderToString(\n    <InlineGrade grade={review.grade} width={95} height={95} />\n  )} ${marked(review.markdown.firstParagraph.trim())}`;\n\n  return parse(content.toString());\n};\n\nexport default function HomeTemplate({\n  pageContext,\n  data,\n}: Props): JSX.Element {\n  return (\n    <Layout>\n      <HomeWrap>\n        <List>\n          {data.page.nodes.map((node) => (\n            <ListItem key={node.sequence}>\n              <Review>\n                {imageForNode(node)}\n                <CWrap>\n                  <ReviewHeader>\n                    <ReviewHeading>\n                      <ReviewHeaderLink to={`/reviews/${node.slug}/`}>\n                        {node.movie.title}\n                      </ReviewHeaderLink>\n                    </ReviewHeading>\n                  </ReviewHeader>\n                  <Main>{reviewContent(node)}</Main>\n                  <Aside>\n                    {moment.utc(node.date, \"DD MMM YYYY\").format(\"DD MMM YYYY\")}\n                  </Aside>\n                </CWrap>\n              </Review>\n            </ListItem>\n          ))}\n        </List>\n        <MoreReviews moreNodes={data.more.nodes} pageContext={pageContext} />\n      </HomeWrap>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!, $moreSkip: Int!, $moreLimit: Int!) {\n    page: allReview(\n      sort: { fields: [sequence], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        date(formatString: \"DD MMM YYYY\")\n        grade\n        slug\n        sequence\n        movie {\n          title\n          runtimeMinutes\n          originalTitle\n          year\n          directors {\n            fullName\n          }\n        }\n        markdown {\n          firstParagraph\n          rawMarkdownBody\n          backdrop {\n            childImageSharp {\n              fluid(toFormat: JPG, jpegQuality: 75) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    more: allReview(\n      sort: { fields: [sequence], order: DESC }\n      limit: $moreLimit\n      skip: $moreSkip\n    ) {\n      nodes {\n        grade\n        slug\n        sequence\n        markdown {\n          backdrop {\n            childImageSharp {\n              fluid(toFormat: JPG, jpegQuality: 75) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n        movie {\n          title\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}