{"version":3,"sources":["webpack:///./src/components/ListWithSlug.tsx","webpack:///./src/components/PanelHeading.tsx","webpack:///./src/components/TwoColumnLayout.tsx","webpack:///./src/pages/reviews.tsx","webpack:///./src/components/FilterPanel.tsx"],"names":["List","Item","Title","Slug","ListItem","title","slug","data-title","Header","Heading","PanelHeading","Columns","Column1","Column2","TwoColumnLayout","location","children","slugForReview","review","moment","date","format","venue","FilterControl","Label","SelectInput","SelectFilter","name","htmlFor","map","optionName","optionValue","key","value","Reviews","data","reviews","nodes","length","heading","placeholder","id","sequence","movie","pageQuery","styleVars","Container","Content","TextInput","TextInputWrap","TextFilter","FilterPanel"],"mappings":"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","file":"component---src-pages-reviews-tsx-a67105df420e22e46def.js","sourcesContent":["import React from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst List = styled.ol`\n  margin: 0 0 35px;\n  padding: 0;\n\n  @media only screen and (min-width: 50em) {\n    margin-top: 24px;\n  }\n`;\n\nconst Item = styled.li`\n  font-weight: normal;\n  list-style-type: none;\n  padding: 0;\n  position: relative;\n\n  &:after {\n    background-color: var(--color-primary);\n    bottom: 0;\n    content: \"\";\n    display: block;\n    height: 1px;\n    left: 20px;\n    margin: 0;\n    position: absolute;\n    right: 0;\n  }\n`;\n\nconst Title = styled.div`\n  display: block;\n  font-size: 18px;\n  line-height: 40px;\n  overflow: hidden;\n  padding: 20px 20px 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst Slug = styled.div`\n  color: var(--color-text-hint);\n  font-size: 15px;\n  line-height: 20px;\n  padding: 0 20px 20px;\n  text-rendering: optimizeLegibility;\n`;\n\ninterface Props {\n  title: string;\n  slug: string;\n}\n\nfunction ListItem({ title, slug }: Props): JSX.Element {\n  return (\n    <Item data-title={title}>\n      <Title>{title}</Title>\n      <Slug>{slug}</Slug>\n    </Item>\n  );\n}\n\nexport { List, ListItem };\n","import React from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst Header = styled.header`\n  padding: 35px 20px 20px;\n  text-align: center;\n\n  @media only screen and (min-width: 50em) {\n    margin: 20px;\n    padding: 20px;\n    text-align: left;\n  }\n`;\n\nconst Heading = styled.h1`\n  line-height: 60px;\n  margin-bottom: 0;\n`;\n\nconst Slug = styled.div`\n  color: var(--color-text-secondary);\n  font-size: 15px;\n  line-height: 20px;\n  margin-bottom: 0;\n`;\n\ninterface Props {\n  title: string;\n  slug: string;\n}\n\nexport default function PanelHeading({ title, slug }: Props): JSX.Element {\n  return (\n    <Header>\n      <Heading>{title}</Heading>\n      <Slug>{slug}</Slug>\n    </Header>\n  );\n}\n","import React, { ReactNode } from \"react\";\n\nimport styled from \"@emotion/styled\";\nimport { WindowLocation } from \"@reach/router\";\n\nimport Layout from \"./Layout\";\n\nconst Columns = styled.div`\n  background: var(--color-content-background);\n  margin: 0 auto;\n  position: relative;\n  width: 100%;\n\n  &:after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n\n  @media only screen and (min-width: 50em) {\n    max-width: 1000px;\n  }\n`;\n\nconst Column1 = styled.div`\n  display: inline-block;\n  width: 100%;\n\n  @media only screen and (min-width: 50em) {\n    float: left;\n    width: 38.196601126%;\n  }\n`;\n\nconst Column2 = styled.div`\n  @media only screen and (min-width: 50em) {\n    float: right;\n    width: 61.803398875%;\n  }\n`;\n\ninterface Props {\n  location: WindowLocation;\n  children: ReactNode;\n}\n\nconst TwoColumnLayout: React.FC<Props> = ({ location, children }: Props) => {\n  return (\n    <Layout location={location}>\n      <Columns>{children}</Columns>\n    </Layout>\n  );\n};\n\nexport { Column1, Column2, TwoColumnLayout };\n","import { graphql } from \"gatsby\";\nimport moment from \"moment\";\nimport React from \"react\";\n\nimport styled from \"@emotion/styled\";\nimport { WindowLocation } from \"@reach/router\";\n\nimport { FilterPanel, TextFilter } from \"../components/FilterPanel\";\nimport { List, ListItem } from \"../components/ListWithSlug\";\nimport PanelHeading from \"../components/PanelHeading\";\nimport {\n  Column1,\n  Column2,\n  TwoColumnLayout,\n} from \"../components/TwoColumnLayout\";\n\nconst slugForReview = (\n  review: Props[\"data\"][\"reviews\"][\"nodes\"][0]\n): string => {\n  return `${moment(review.date).format(\"dddd, MMMM Do YYYY\")} via ${\n    review.venue\n  }.`;\n};\n\nconst FilterControl = styled.div`\n  margin-bottom: 35px;\n`;\n\nconst Label = styled.label`\n  color: var(--color-accent);\n  display: block;\n  font-size: 15px;\n  font-weight: normal;\n  line-height: 2.2;\n`;\n\nconst SelectInput = styled.select`\n  appearance: none;\n  backface-visibility: hidden;\n  background-color: #fff;\n  border: 0;\n  border-radius: 0;\n  box-sizing: border-box;\n  color: var(--color-text-secondary);\n  display: block;\n  font-family: var(--font-family-system);\n  font-size: 15px;\n  padding: 0;\n  text-indent: 0.01px;\n  text-overflow: \"\";\n  width: 100%;\n`;\n\ninterface SelectFilterProps {\n  name: string;\n  children: Array<[string, string]>;\n}\n\nconst SelectFilter: React.FC<SelectFilterProps> = ({\n  name,\n  children,\n}: SelectFilterProps) => {\n  return (\n    <FilterControl>\n      <Label htmlFor={name}>{name}</Label>\n      <SelectInput>\n        {children.map(([optionName, optionValue]) => {\n          return (\n            <option key={optionValue} value={optionValue}>\n              {optionName}\n            </option>\n          );\n        })}\n      </SelectInput>\n    </FilterControl>\n  );\n};\n\ninterface Props {\n  location: WindowLocation;\n  data: {\n    reviews: {\n      nodes: {\n        sequence: number;\n        date: string;\n        imdbId: string;\n        venue: string;\n        movie: {\n          title: string;\n          year: string;\n        };\n      }[];\n    };\n  };\n}\n\nconst Reviews: React.FC<Props> = ({ location, data }: Props) => {\n  return (\n    <TwoColumnLayout location={location}>\n      <Column1>\n        <PanelHeading\n          title=\"Reviews\"\n          slug={`I've published ${data.reviews.nodes.length} movies since 2014`}\n        />\n        <FilterPanel heading=\"Filter and Sort\">\n          <TextFilter\n            name=\"Title\"\n            placeholder=\"Enter all or part of a title.\"\n          />\n          <SelectFilter name=\"Order By\">\n            {[\n              [\"Date (Oldest First)\", \"date-asc\"],\n              [\"Date (Newest First)\", \"date-desc\"],\n              [\"Title\", \"title-asc\"],\n            ]}\n          </SelectFilter>\n        </FilterPanel>\n      </Column1>\n      <Column2>\n        <List id=\"reviews\">\n          {data.reviews.nodes.map((review) => (\n            <ListItem\n              key={review.sequence}\n              title={`${review.movie.title}`}\n              slug={slugForReview(review)}\n            />\n          ))}\n        </List>\n      </Column2>\n    </TwoColumnLayout>\n  );\n};\n\nexport default Reviews;\n\nexport const pageQuery = graphql`\n  query {\n    reviews: allReview(sort: { fields: [movie___sortTitle], order: ASC }) {\n      nodes {\n        imdbId\n        sequence\n        grade\n        date(formatString: \"YYYY-MM-DD\")\n        movie {\n          title\n          year\n        }\n      }\n    }\n  }\n`;\n","import React, { ReactNode } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst styleVars = {\n  filterBackgroundColor: \"#fff\",\n  filterBorderColor: \"var(--color-primary)\",\n  filterSliderActiveHandleBackgroundColor: \"#eaeaea\",\n  filterSliderBackgroundColor: \"rgba(0, 0, 0, .02)\",\n  filterTextBoxColor: \"var(--color-text-secondary)\",\n};\n\nconst Container = styled.div`\n  border: 1px solid var(--color-primary);\n  border-radius: 5px;\n  margin: 20px;\n  transition: opacity 0.3s ease;\n`;\n\nconst Heading = styled.h2`\n  border-bottom: 1px solid var(--color-primary);\n  color: var(--color-accent);\n  display: block;\n  font-size: 19px;\n  font-weight: normal;\n  margin: 0 0 20px;\n  padding: 20px;\n  position: relative;\n  text-decoration: none;\n`;\n\nconst Content = styled.div`\n  padding: 0 20px;\n`;\n\nconst TextInput = styled.input`\n  backface-visibility: hidden;\n  background-color: ${styleVars.filterBackgroundColor};\n  border: 0;\n  border-radius: 0;\n  box-sizing: border-box;\n  color: ${styleVars.filterTextBoxColor};\n  display: block;\n  font-family: var(--font-family-system);\n  font-size: 16px;\n  padding: 0;\n  width: 100%;\n  ::placeholder {\n    color: var(--color-text-hint);\n    font-family: var(--font-family-system);\n    font-size: 14px;\n    font-weight: normal;\n  }\n`;\n\nconst TextInputWrap = styled.div`\n  border-bottom: solid 1px $filter_border_color;\n  margin-bottom: 8px;\n  padding-bottom: 7px;\n`;\n\nconst FilterControl = styled.div`\n  margin-bottom: 35px;\n`;\n\nconst Label = styled.label`\n  color: var(--color-accent);\n  display: block;\n  font-size: 15px;\n  font-weight: normal;\n  line-height: 2.2;\n`;\n\ninterface TextFilterProps {\n  name: string;\n  placeholder: string;\n}\n\nfunction TextFilter({ name, placeholder }: TextFilterProps): JSX.Element {\n  return (\n    <FilterControl>\n      <Label htmlFor={name}>{name}</Label>\n      <TextInputWrap>\n        <TextInput name={name} placeholder={placeholder} />\n      </TextInputWrap>\n    </FilterControl>\n  );\n}\n\ninterface FilterPanelProps {\n  heading: string;\n  children: ReactNode;\n}\n\nfunction FilterPanel({ heading, children }: FilterPanelProps): JSX.Element {\n  return (\n    <Container>\n      <Heading>{heading}</Heading>\n      <Content>{children}</Content>\n    </Container>\n  );\n}\n\nexport { FilterPanel, TextFilter };\n"],"sourceRoot":""}